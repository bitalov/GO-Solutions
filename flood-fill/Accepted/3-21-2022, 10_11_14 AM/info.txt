{"id":664276113,"lang":"golang","time":"6 hours, 54 minutes","timestamp":1647853874,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/664276113/","is_pending":"Not Pending","title":"Flood Fill","memory":"4.3 MB","code":"var dx = []int{-1, 1, 0, 0}\nvar dy = []int{0, 0, -1, 1}\n\nfunc floodFill(image [][]int, sr, sc, newColor int) [][]int {\n\toldColor := image[sr][sc]\n\tif oldColor == newColor {\n\t\treturn image\n\t}\n\n\tm, n := len(image), len(image[0])\n\n\tcoordinates := make([][]int, 1, m*n)\n\tcoordinates[0] = []int{sr, sc}\n\n\tfor len(coordinates) > 0 {\n\t\tc := coordinates[0]\n\t\tcoordinates = coordinates[1:]\n\t\timage[c[0]][c[1]] = newColor\n\n\t\tfor i := 0; i < 4; i++ {\n\t\t\tx := c[0] + dx[i]\n\t\t\ty := c[1] + dy[i]\n\t\t\tif 0 <= x && x < m &&\n\t\t\t\t0 <= y && y < n &&\n\t\t\t\timage[x][y] == oldColor {\n\t\t\t\tcoordinates = append(coordinates, []int{x, y})\n\t\t\t}\n\t\t}\n\t}\n\n\treturn image\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}