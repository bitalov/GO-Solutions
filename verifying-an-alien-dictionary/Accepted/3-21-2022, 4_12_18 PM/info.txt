{"id":664420757,"lang":"golang","time":"53Â minutes","timestamp":1647875538,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/664420757/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"2.6 MB","code":"func isAlienSorted(words []string, order string) bool {\n\tindexs := make([]int, 123)\n\tfor i, c := range order {\n\t\tindexs[c] = i\n\t}\n\n\tless := func(i, j int) bool {\n\t\tsi, sj := len(words[i]), len(words[j])\n\t\tfor k := 0; k < si && k < sj; k++ {\n\t\t\tii, ij := indexs[words[i][k]], indexs[words[j][k]]\n\t\t\tswitch {\n\t\t\tcase ii < ij:\n\t\t\t\treturn true\n\t\t\tcase ii > ij:\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn si <= sj\n\t}\n\n\tfor i := 1; i < len(words); i++ {\n\t\tif !less(i-1, i) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary"}