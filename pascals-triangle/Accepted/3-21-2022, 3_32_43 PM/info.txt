{"id":664399983,"lang":"golang","time":"1 hour, 33 minutes","timestamp":1647873163,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/664399983/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"2 MB","code":"func generate(numRows int) [][]int {\n\tres := [][]int{}\n\tif numRows == 0 {\n\t\treturn res\n\t}\n\n\tres = append(res, []int{1})\n\tif numRows == 1 {\n\t\treturn res\n\t}\n\n\tfor i := 1; i < numRows; i++ {\n\t\tres = append(res, genNext(res[i-1]))\n\t}\n\n\treturn res\n}\n\nfunc genNext(p []int) []int {\n\tres := make([]int, 1, len(p)+1)\n\tres = append(res, p...)\n\n\tfor i := 0; i < len(res)-1; i++ {\n\t\tres[i] += res[i+1]\n\t}\n\n\treturn res\n}","compare_result":"11111111111111","title_slug":"pascals-triangle"}