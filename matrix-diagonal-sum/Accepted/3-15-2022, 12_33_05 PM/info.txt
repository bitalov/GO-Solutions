{"id":660458037,"lang":"golang","time":"6 days, 4 hours","timestamp":1647343985,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/660458037/","is_pending":"Not Pending","title":"Matrix Diagonal Sum","memory":"5.5 MB","code":"func diag(mat[][] int) int{\n    \n    i := 0\n    j := 0\n    \n    n := len(mat)\n    ret := 0\n    for i < n && j < n {\n        \n        ret = ret + mat[i][j]\n        i++\n        j++\n    }\n    \n    return ret\n    \n}\n\nfunc antidiag(mat[][] int) int{\n    \n    i := 0\n    j := 0\n    \n    n := len(mat)\n    j = n - 1\n    ret := 0\n    for i < n && j > -1 {\n        \n        ret = ret + mat[i][j]\n        i++\n        j--\n    }\n    \n    return ret\n    \n}\n\n\nfunc diagonalSum(mat [][]int) int {\n    n := len(mat)\n    ans := diag(mat) + antidiag(mat)\n    if n % 2 == 1 {\n        ans = ans - mat[n / 2][n / 2]\n    }\n    return ans\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matrix-diagonal-sum"}