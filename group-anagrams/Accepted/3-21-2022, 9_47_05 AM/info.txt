{"id":664267589,"lang":"golang","time":"7 hours, 19 minutes","timestamp":1647852425,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/664267589/","is_pending":"Not Pending","title":"Group Anagrams","memory":"7.1 MB","code":"func groupAnagrams(ss []string) [][]string {\n\ttmp := make(map[int][]string, len(ss)/2)\n\tfor _, s := range ss {\n\t\tc := encode(s)\n\t\ttmp[c] = append(tmp[c], s)\n\t}\n\n\tres := make([][]string, 0, len(tmp))\n\tfor _, v := range tmp {\n\t\tres = append(res, v)\n\t}\n\n\treturn res\n}\n\nvar prime = []int{5, 71, 37, 29, 2, 53, 59, 19, 11, 83, 79, 31, 43, 13, 7, 67, 97, 23, 17, 3, 41, 73, 47, 89, 61, 101}\n\nfunc encode(s string) int {\n\tres := 1\n\tfor i := range s {\n\t\tres *= prime[s[i]-'a']\n\t}\n\treturn res\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}