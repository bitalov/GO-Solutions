{"id":664277604,"lang":"golang","time":"6 hours, 50 minutes","timestamp":1647854131,"status_display":"Accepted","runtime":"43 ms","url":"/submissions/detail/664277604/","is_pending":"Not Pending","title":"Maximum Width Ramp","memory":"7.6 MB","code":"\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\nfunc maxWidthRamp(A []int) int {\n  size := len(A)\n\n\tstack := make([]int, 1, size)\n\ttop := 0\n\tfor i := 1; i < size; i++ {\n\t\tif A[stack[top]] > A[i] {\n\t\t\tstack = append(stack, i)\n\t\t\ttop++\n\t\t}\n\t}\n\n\tres := 0\n\tfor j := size - 1; j >= 0 && top >= 0; j-- {\n\t\twidth := 0\n\t\tfor top >= 0 && A[stack[top]] <= A[j] {\n\t\t\twidth = j - stack[top]\n\t\t\tstack = stack[:top]\n\t\t\ttop--\n\t\t}\n\t\tres = max(res, width)\n\t}\n\n\treturn res  \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-width-ramp"}