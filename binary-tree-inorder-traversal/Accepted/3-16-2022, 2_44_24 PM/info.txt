{"id":661182236,"lang":"golang","time":"5 days, 2 hours","timestamp":1647438264,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/661182236/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"2.1 MB","code":"/**\n * Definition for a binary tree node.\n * type TreeNode struct {\n *     Val int\n *     Left *TreeNode\n *     Right *TreeNode\n * }\n */\n\n\n\nfunc inorderTraversal(root *TreeNode) []int {\n    \n    if root == nil {\n        return nil\n    }\n    \n    if root.Left == nil && root.Right == nil {\n        return []int{root.Val}\n    }\n    \n    ret := inorderTraversal(root.Left)\n    ret = append(ret , root.Val)\n    ret = append(ret , inorderTraversal(root.Right)...)\n    \n    return ret\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}