{"id":664265869,"lang":"golang","time":"7 hours, 23 minutes","timestamp":1647852153,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/664265869/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"2 MB","code":"func spiralOrder(matrix [][]int) []int {\n\tif len(matrix) == 0 || len(matrix[0]) == 0 {\n\t\treturn nil\n\t}\n\n\tm, n := len(matrix), len(matrix[0])\n\n\tnext := nextFunc(m, n)\n\n\tres := make([]int, m*n)\n\tfor i := range res {\n\t\tx, y := next()\n\t\tres[i] = matrix[x][y]\n\t}\n\n\treturn res\n}\n\nfunc nextFunc(m, n int) func() (int, int) {\n\ttop, down := 0, m-1\n\tleft, right := 0, n-1\n\tx, y := 0, -1\n\tdx, dy := 0, 1\n\treturn func() (int, int) {\n\t\tx += dx\n\t\ty += dy\n\t\tswitch { \n\t\tcase y+dy > right:\n\t\t\ttop++\n\t\t\tdx, dy = 1, 0\n\t\tcase x+dx > down:\n\t\t\tright--\n\t\t\tdx, dy = 0, -1\n\t\tcase y+dy < left:\n\t\t\tdown--\n\t\t\tdx, dy = -1, 0\n\t\tcase x+dx < top:\n\t\t\tleft++\n\t\t\tdx, dy = 0, 1\n\t\t}\n\t\treturn x, y\n\t}\n}","compare_result":"11111111111111111111111","title_slug":"spiral-matrix"}