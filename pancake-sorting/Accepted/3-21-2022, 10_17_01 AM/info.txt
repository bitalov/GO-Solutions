{"id":664278118,"lang":"golang","time":"6 hours, 49 minutes","timestamp":1647854221,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/664278118/","is_pending":"Not Pending","title":"Pancake Sorting","memory":"2.3 MB","code":"\nfunc reverse(A []int, k int) {\n\tfor i, j := 0, k-1; i < j; i, j = i+1, j-1 {\n\t\tA[i], A[j] = A[j], A[i]\n\t}\n}\nfunc pancakeSort(A []int) []int {\n    size := len(A)\n\tres := make([]int, 0, size*2)\n\tfor Ai := size; Ai > 1; Ai-- {\n\t\t// every round makes A[i-1] is i\n\t\tif A[Ai-1] == Ai {\n\t\t\tcontinue\n\t\t}\n\t\ti := Ai - 2\n\t\tfor A[i] != Ai {\n\t\t\ti--\n\t\t}\n\t\tif i != 0 {\n\t\t\treverse(A, i+1) // move Ai to A[0]\n\t\t\tres = append(res, i+1)\n\t\t}\n\t\treverse(A, Ai) // move Ai to A[Ai-1]\n\t\tres = append(res, Ai)\n\t}\n\treturn res\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"pancake-sorting"}